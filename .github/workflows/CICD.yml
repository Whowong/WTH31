name: CI/CD Pipeline

env:
  registryName: ahcsawth31containerregistry.azurecr.io
  repositoryName: wth/dotnetcoreapp
  dockerFolderPath: ./Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}
  
on:
  push:
    branches: [ main ]
    paths: Application/*

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
      id-token: write
      contents: read
      
jobs:
  dockerBuildPush:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
        
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      uses: docker/login-action@v1.9.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ env.registryName }}
        # Username used to log against the Docker registry
        username: ${{ secrets.ACR_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ACR_PASSWORD }}
        # Log out from the Docker registry at the end of a job
        logout: true
        
    - name: Docker Build
      run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
      
    - name: Docker Push
      run: docker push $registryName/$repositoryName:$tag
      
  buildDeploy-DevEnv:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: dockerBuildPush
    environment: Dev
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
    
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@main
        with:
            subscriptionID: 6e905154-269f-4db5-b367-01288088e6f3
            resourceGroupName: WTH31
            template: "ARM-Templates/container-webapp-template.json"
            parameters: webAppName=AHCSAdevopswth31-${{ secrets.ENVIRONMENT }}
            
      - name: Deploy Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
            app-name: AHCSAdevopswth31-${{ secrets.ENVIRONMENT }}
            images: ${{ env.registryName }}/wth/dotnetcoreapp:${{ env.tag }}
            
  buildDeploy-TestEnv:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: buildDeploy-DevEnv
    environment: Test
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
    
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@main
        with:
            subscriptionID: 6e905154-269f-4db5-b367-01288088e6f3
            resourceGroupName: WTH31
            template: "ARM-Templates/container-webapp-template.json"
            parameters: webAppName=AHCSAdevopswth31-${{ secrets.ENVIRONMENT }}
      - name: Deploy Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
            app-name: AHCSAdevopswth31-${{ secrets.ENVIRONMENT }}
            images: ${{ env.registryName }}/wth/dotnetcoreapp:${{ env.tag }}


